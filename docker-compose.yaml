version: '3'

services:
  apigateway:
    container_name: apigateway
    build:
      context: apigateway
      dockerfile: Dockerfile
    environment:
      #FOOD_SERVICE: "http://service_a:8081"
      #HEALTH_SERVICE: "http://service_b:8082"
      #INVENTORY_SERVICE: ""
      #MEALPLAN_SERVICE: ""
      #RECIPE_SERVICE: ""
      #USER_SERVICE: ""
      #CLIENT: "https://client:8087"
    depends_on:
      - foodservice
      - healthservice
      - inventoryservice
      - mealplanservice
      - recipeservice
      - userservice
    deploy:
      replicas: 1

  foodservice:
    container_name: foodservice
    build:
      context: services/food-service/FoodService
      dockerfile: Dockerfile
    #environment:
    #depends_on:
  healthservice:
    container_name: healthservice
    build:
      context: services/health-service
      dockerfile: Dockerfile
    #environment:
    #depends_on:
  inventoryservice:
    container_name: inventoryservice/InventoryService
    build:
      context: services/inventory-service
      dockerfile: Dockerfile
    #environment:
    #depends_on:
  mealplanservice:
    container_name: mealplanservice
    build:
      context: services/mealplan-service
      dockerfile: Dockerfile
    #environment:
    #depends_on:
  recipeservice:
    container_name: recipeservice
    build:
      context: services/recipe-service
      dockerfile: Dockerfile
    #environment:
    #depends_on:
  userservice:
    container_name: userservice
    build:
      context: services/user-service
      dockerfile: Dockerfile
    #environment:
    #depends_on:

  #client:
  #  container_name: client
  #  build:
  #    context: client
  #    dockerfile: Dockerfile
  #  #environment:
  #  depends_on:
  #    - apigateway


  #database:
  #  image: mysql:latest
  #  container_name: database
  #  environment:
  #    MYSQL_ROOT_PASSWORD: pass123
  #  ports:
  #    - 3306:3306
  #  volumes:
  #    - "./database/init.sql:/docker-entrypoint-initdb.d/1.sql"
  #    - "./database/data.sql:/docker-entrypoint-initdb.d/2.sql"

  proxy:
    image: nginx:latest
    depends_on:
    #  - client
      - apigateway
    ports:
      - 443:443
    volumes:
      - ./cert:/etc/nginx/ssl
      - ./nginx.conf:/etc/nginx/nginx.conf